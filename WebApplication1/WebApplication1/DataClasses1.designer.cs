#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication1
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="TRA1")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAdmin(Admin instance);
    partial void UpdateAdmin(Admin instance);
    partial void DeleteAdmin(Admin instance);
    partial void InsertChitiethdb(Chitiethdb instance);
    partial void UpdateChitiethdb(Chitiethdb instance);
    partial void DeleteChitiethdb(Chitiethdb instance);
    partial void InsertHoadonban(Hoadonban instance);
    partial void UpdateHoadonban(Hoadonban instance);
    partial void DeleteHoadonban(Hoadonban instance);
    partial void InsertKhachhang(Khachhang instance);
    partial void UpdateKhachhang(Khachhang instance);
    partial void DeleteKhachhang(Khachhang instance);
    partial void InsertLoaisp(Loaisp instance);
    partial void UpdateLoaisp(Loaisp instance);
    partial void DeleteLoaisp(Loaisp instance);
    partial void InsertNghenhan(Nghenhan instance);
    partial void UpdateNghenhan(Nghenhan instance);
    partial void DeleteNghenhan(Nghenhan instance);
    partial void InsertSanpham(Sanpham instance);
    partial void UpdateSanpham(Sanpham instance);
    partial void DeleteSanpham(Sanpham instance);
    partial void InsertThuonghieu(Thuonghieu instance);
    partial void UpdateThuonghieu(Thuonghieu instance);
    partial void DeleteThuonghieu(Thuonghieu instance);
    partial void InsertTintuc(Tintuc instance);
    partial void UpdateTintuc(Tintuc instance);
    partial void DeleteTintuc(Tintuc instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["TRA1ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<Chitiethdb> Chitiethdbs
		{
			get
			{
				return this.GetTable<Chitiethdb>();
			}
		}
		
		public System.Data.Linq.Table<Hoadonban> Hoadonbans
		{
			get
			{
				return this.GetTable<Hoadonban>();
			}
		}
		
		public System.Data.Linq.Table<Khachhang> Khachhangs
		{
			get
			{
				return this.GetTable<Khachhang>();
			}
		}
		
		public System.Data.Linq.Table<Loaisp> Loaisps
		{
			get
			{
				return this.GetTable<Loaisp>();
			}
		}
		
		public System.Data.Linq.Table<Nghenhan> Nghenhans
		{
			get
			{
				return this.GetTable<Nghenhan>();
			}
		}
		
		public System.Data.Linq.Table<Sanpham> Sanphams
		{
			get
			{
				return this.GetTable<Sanpham>();
			}
		}
		
		public System.Data.Linq.Table<Thuonghieu> Thuonghieus
		{
			get
			{
				return this.GetTable<Thuonghieu>();
			}
		}
		
		public System.Data.Linq.Table<Tintuc> Tintucs
		{
			get
			{
				return this.GetTable<Tintuc>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	public partial class Admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Username;
		
		private string _Password;
		
		private EntitySet<Nghenhan> _Nghenhans;
		
		private EntitySet<Sanpham> _Sanphams;
		
		private EntitySet<Tintuc> _Tintucs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public Admin()
		{
			this._Nghenhans = new EntitySet<Nghenhan>(new Action<Nghenhan>(this.attach_Nghenhans), new Action<Nghenhan>(this.detach_Nghenhans));
			this._Sanphams = new EntitySet<Sanpham>(new Action<Sanpham>(this.attach_Sanphams), new Action<Sanpham>(this.detach_Sanphams));
			this._Tintucs = new EntitySet<Tintuc>(new Action<Tintuc>(this.attach_Tintucs), new Action<Tintuc>(this.detach_Tintucs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(255)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_Nghenhan", Storage="_Nghenhans", ThisKey="Username", OtherKey="Username")]
		public EntitySet<Nghenhan> Nghenhans
		{
			get
			{
				return this._Nghenhans;
			}
			set
			{
				this._Nghenhans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_Sanpham", Storage="_Sanphams", ThisKey="Username", OtherKey="Username")]
		public EntitySet<Sanpham> Sanphams
		{
			get
			{
				return this._Sanphams;
			}
			set
			{
				this._Sanphams.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_Tintuc", Storage="_Tintucs", ThisKey="Username", OtherKey="Username")]
		public EntitySet<Tintuc> Tintucs
		{
			get
			{
				return this._Tintucs;
			}
			set
			{
				this._Tintucs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Nghenhans(Nghenhan entity)
		{
			this.SendPropertyChanging();
			entity.Admin = this;
		}
		
		private void detach_Nghenhans(Nghenhan entity)
		{
			this.SendPropertyChanging();
			entity.Admin = null;
		}
		
		private void attach_Sanphams(Sanpham entity)
		{
			this.SendPropertyChanging();
			entity.Admin = this;
		}
		
		private void detach_Sanphams(Sanpham entity)
		{
			this.SendPropertyChanging();
			entity.Admin = null;
		}
		
		private void attach_Tintucs(Tintuc entity)
		{
			this.SendPropertyChanging();
			entity.Admin = this;
		}
		
		private void detach_Tintucs(Tintuc entity)
		{
			this.SendPropertyChanging();
			entity.Admin = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Chitiethdb")]
	public partial class Chitiethdb : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SoHDB;
		
		private string _MaSP;
		
		private System.Nullable<int> _SL;
		
		private System.Nullable<double> _Giamua;
		
		private EntityRef<Hoadonban> _Hoadonban;
		
		private EntityRef<Sanpham> _Sanpham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSoHDBChanging(string value);
    partial void OnSoHDBChanged();
    partial void OnMaSPChanging(string value);
    partial void OnMaSPChanged();
    partial void OnSLChanging(System.Nullable<int> value);
    partial void OnSLChanged();
    partial void OnGiamuaChanging(System.Nullable<double> value);
    partial void OnGiamuaChanged();
    #endregion
		
		public Chitiethdb()
		{
			this._Hoadonban = default(EntityRef<Hoadonban>);
			this._Sanpham = default(EntityRef<Sanpham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoHDB", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SoHDB
		{
			get
			{
				return this._SoHDB;
			}
			set
			{
				if ((this._SoHDB != value))
				{
					if (this._Hoadonban.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSoHDBChanging(value);
					this.SendPropertyChanging();
					this._SoHDB = value;
					this.SendPropertyChanged("SoHDB");
					this.OnSoHDBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="NVarChar(100) NOT NULL", CanBeNull=false)]
		public string MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					if (this._Sanpham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SL", DbType="Int")]
		public System.Nullable<int> SL
		{
			get
			{
				return this._SL;
			}
			set
			{
				if ((this._SL != value))
				{
					this.OnSLChanging(value);
					this.SendPropertyChanging();
					this._SL = value;
					this.SendPropertyChanged("SL");
					this.OnSLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Giamua", DbType="Float")]
		public System.Nullable<double> Giamua
		{
			get
			{
				return this._Giamua;
			}
			set
			{
				if ((this._Giamua != value))
				{
					this.OnGiamuaChanging(value);
					this.SendPropertyChanging();
					this._Giamua = value;
					this.SendPropertyChanged("Giamua");
					this.OnGiamuaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hoadonban_Chitiethdb", Storage="_Hoadonban", ThisKey="SoHDB", OtherKey="SoHDB", IsForeignKey=true)]
		public Hoadonban Hoadonban
		{
			get
			{
				return this._Hoadonban.Entity;
			}
			set
			{
				Hoadonban previousValue = this._Hoadonban.Entity;
				if (((previousValue != value) 
							|| (this._Hoadonban.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Hoadonban.Entity = null;
						previousValue.Chitiethdb = null;
					}
					this._Hoadonban.Entity = value;
					if ((value != null))
					{
						value.Chitiethdb = this;
						this._SoHDB = value.SoHDB;
					}
					else
					{
						this._SoHDB = default(string);
					}
					this.SendPropertyChanged("Hoadonban");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sanpham_Chitiethdb", Storage="_Sanpham", ThisKey="MaSP", OtherKey="MaSP", IsForeignKey=true)]
		public Sanpham Sanpham
		{
			get
			{
				return this._Sanpham.Entity;
			}
			set
			{
				Sanpham previousValue = this._Sanpham.Entity;
				if (((previousValue != value) 
							|| (this._Sanpham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Sanpham.Entity = null;
						previousValue.Chitiethdbs.Remove(this);
					}
					this._Sanpham.Entity = value;
					if ((value != null))
					{
						value.Chitiethdbs.Add(this);
						this._MaSP = value.MaSP;
					}
					else
					{
						this._MaSP = default(string);
					}
					this.SendPropertyChanged("Sanpham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hoadonban")]
	public partial class Hoadonban : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _SoHDB;
		
		private string _MaKH;
		
		private string _Ngayban;
		
		private System.Nullable<double> _Tongtien;
		
		private EntityRef<Chitiethdb> _Chitiethdb;
		
		private EntityRef<Khachhang> _Khachhang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSoHDBChanging(string value);
    partial void OnSoHDBChanged();
    partial void OnMaKHChanging(string value);
    partial void OnMaKHChanged();
    partial void OnNgaybanChanging(string value);
    partial void OnNgaybanChanged();
    partial void OnTongtienChanging(System.Nullable<double> value);
    partial void OnTongtienChanged();
    #endregion
		
		public Hoadonban()
		{
			this._Chitiethdb = default(EntityRef<Chitiethdb>);
			this._Khachhang = default(EntityRef<Khachhang>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoHDB", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string SoHDB
		{
			get
			{
				return this._SoHDB;
			}
			set
			{
				if ((this._SoHDB != value))
				{
					this.OnSoHDBChanging(value);
					this.SendPropertyChanging();
					this._SoHDB = value;
					this.SendPropertyChanged("SoHDB");
					this.OnSoHDBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="NVarChar(255)")]
		public string MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					if (this._Khachhang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngayban", DbType="NVarChar(255)")]
		public string Ngayban
		{
			get
			{
				return this._Ngayban;
			}
			set
			{
				if ((this._Ngayban != value))
				{
					this.OnNgaybanChanging(value);
					this.SendPropertyChanging();
					this._Ngayban = value;
					this.SendPropertyChanged("Ngayban");
					this.OnNgaybanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tongtien", DbType="Float")]
		public System.Nullable<double> Tongtien
		{
			get
			{
				return this._Tongtien;
			}
			set
			{
				if ((this._Tongtien != value))
				{
					this.OnTongtienChanging(value);
					this.SendPropertyChanging();
					this._Tongtien = value;
					this.SendPropertyChanged("Tongtien");
					this.OnTongtienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Hoadonban_Chitiethdb", Storage="_Chitiethdb", ThisKey="SoHDB", OtherKey="SoHDB", IsUnique=true, IsForeignKey=false)]
		public Chitiethdb Chitiethdb
		{
			get
			{
				return this._Chitiethdb.Entity;
			}
			set
			{
				Chitiethdb previousValue = this._Chitiethdb.Entity;
				if (((previousValue != value) 
							|| (this._Chitiethdb.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Chitiethdb.Entity = null;
						previousValue.Hoadonban = null;
					}
					this._Chitiethdb.Entity = value;
					if ((value != null))
					{
						value.Hoadonban = this;
					}
					this.SendPropertyChanged("Chitiethdb");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khachhang_Hoadonban", Storage="_Khachhang", ThisKey="MaKH", OtherKey="MaKH", IsForeignKey=true)]
		public Khachhang Khachhang
		{
			get
			{
				return this._Khachhang.Entity;
			}
			set
			{
				Khachhang previousValue = this._Khachhang.Entity;
				if (((previousValue != value) 
							|| (this._Khachhang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Khachhang.Entity = null;
						previousValue.Hoadonbans.Remove(this);
					}
					this._Khachhang.Entity = value;
					if ((value != null))
					{
						value.Hoadonbans.Add(this);
						this._MaKH = value.MaKH;
					}
					else
					{
						this._MaKH = default(string);
					}
					this.SendPropertyChanged("Khachhang");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Khachhang")]
	public partial class Khachhang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaKH;
		
		private string _TenKH;
		
		private string _Diachi;
		
		private string _SDT;
		
		private string _Username_khach;
		
		private string _Password_khach;
		
		private EntitySet<Hoadonban> _Hoadonbans;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKHChanging(string value);
    partial void OnMaKHChanged();
    partial void OnTenKHChanging(string value);
    partial void OnTenKHChanged();
    partial void OnDiachiChanging(string value);
    partial void OnDiachiChanged();
    partial void OnSDTChanging(string value);
    partial void OnSDTChanged();
    partial void OnUsername_khachChanging(string value);
    partial void OnUsername_khachChanged();
    partial void OnPassword_khachChanging(string value);
    partial void OnPassword_khachChanged();
    #endregion
		
		public Khachhang()
		{
			this._Hoadonbans = new EntitySet<Hoadonban>(new Action<Hoadonban>(this.attach_Hoadonbans), new Action<Hoadonban>(this.detach_Hoadonbans));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKH", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaKH
		{
			get
			{
				return this._MaKH;
			}
			set
			{
				if ((this._MaKH != value))
				{
					this.OnMaKHChanging(value);
					this.SendPropertyChanging();
					this._MaKH = value;
					this.SendPropertyChanged("MaKH");
					this.OnMaKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKH", DbType="NVarChar(255)")]
		public string TenKH
		{
			get
			{
				return this._TenKH;
			}
			set
			{
				if ((this._TenKH != value))
				{
					this.OnTenKHChanging(value);
					this.SendPropertyChanging();
					this._TenKH = value;
					this.SendPropertyChanged("TenKH");
					this.OnTenKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diachi", DbType="NVarChar(255)")]
		public string Diachi
		{
			get
			{
				return this._Diachi;
			}
			set
			{
				if ((this._Diachi != value))
				{
					this.OnDiachiChanging(value);
					this.SendPropertyChanging();
					this._Diachi = value;
					this.SendPropertyChanged("Diachi");
					this.OnDiachiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SDT", DbType="NVarChar(255)")]
		public string SDT
		{
			get
			{
				return this._SDT;
			}
			set
			{
				if ((this._SDT != value))
				{
					this.OnSDTChanging(value);
					this.SendPropertyChanging();
					this._SDT = value;
					this.SendPropertyChanged("SDT");
					this.OnSDTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username_khach", DbType="NVarChar(255)")]
		public string Username_khach
		{
			get
			{
				return this._Username_khach;
			}
			set
			{
				if ((this._Username_khach != value))
				{
					this.OnUsername_khachChanging(value);
					this.SendPropertyChanging();
					this._Username_khach = value;
					this.SendPropertyChanged("Username_khach");
					this.OnUsername_khachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password_khach", DbType="NVarChar(255)")]
		public string Password_khach
		{
			get
			{
				return this._Password_khach;
			}
			set
			{
				if ((this._Password_khach != value))
				{
					this.OnPassword_khachChanging(value);
					this.SendPropertyChanging();
					this._Password_khach = value;
					this.SendPropertyChanged("Password_khach");
					this.OnPassword_khachChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Khachhang_Hoadonban", Storage="_Hoadonbans", ThisKey="MaKH", OtherKey="MaKH")]
		public EntitySet<Hoadonban> Hoadonbans
		{
			get
			{
				return this._Hoadonbans;
			}
			set
			{
				this._Hoadonbans.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Hoadonbans(Hoadonban entity)
		{
			this.SendPropertyChanging();
			entity.Khachhang = this;
		}
		
		private void detach_Hoadonbans(Hoadonban entity)
		{
			this.SendPropertyChanging();
			entity.Khachhang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Loaisp")]
	public partial class Loaisp : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Maloaisp;
		
		private string _Tenloaisp;
		
		private EntitySet<Sanpham> _Sanphams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaloaispChanging(string value);
    partial void OnMaloaispChanged();
    partial void OnTenloaispChanging(string value);
    partial void OnTenloaispChanged();
    #endregion
		
		public Loaisp()
		{
			this._Sanphams = new EntitySet<Sanpham>(new Action<Sanpham>(this.attach_Sanphams), new Action<Sanpham>(this.detach_Sanphams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Maloaisp", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Maloaisp
		{
			get
			{
				return this._Maloaisp;
			}
			set
			{
				if ((this._Maloaisp != value))
				{
					this.OnMaloaispChanging(value);
					this.SendPropertyChanging();
					this._Maloaisp = value;
					this.SendPropertyChanged("Maloaisp");
					this.OnMaloaispChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tenloaisp", DbType="NVarChar(255)")]
		public string Tenloaisp
		{
			get
			{
				return this._Tenloaisp;
			}
			set
			{
				if ((this._Tenloaisp != value))
				{
					this.OnTenloaispChanging(value);
					this.SendPropertyChanging();
					this._Tenloaisp = value;
					this.SendPropertyChanged("Tenloaisp");
					this.OnTenloaispChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loaisp_Sanpham", Storage="_Sanphams", ThisKey="Maloaisp", OtherKey="Maloaisp")]
		public EntitySet<Sanpham> Sanphams
		{
			get
			{
				return this._Sanphams;
			}
			set
			{
				this._Sanphams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sanphams(Sanpham entity)
		{
			this.SendPropertyChanging();
			entity.Loaisp = this;
		}
		
		private void detach_Sanphams(Sanpham entity)
		{
			this.SendPropertyChanging();
			entity.Loaisp = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Nghenhan")]
	public partial class Nghenhan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaNN;
		
		private string _Tennghenhan;
		
		private string _AnhNN;
		
		private string _Thongtin;
		
		private string _Username;
		
		private EntityRef<Admin> _Admin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNNChanging(string value);
    partial void OnMaNNChanged();
    partial void OnTennghenhanChanging(string value);
    partial void OnTennghenhanChanged();
    partial void OnAnhNNChanging(string value);
    partial void OnAnhNNChanged();
    partial void OnThongtinChanging(string value);
    partial void OnThongtinChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    #endregion
		
		public Nghenhan()
		{
			this._Admin = default(EntityRef<Admin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNN", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaNN
		{
			get
			{
				return this._MaNN;
			}
			set
			{
				if ((this._MaNN != value))
				{
					this.OnMaNNChanging(value);
					this.SendPropertyChanging();
					this._MaNN = value;
					this.SendPropertyChanged("MaNN");
					this.OnMaNNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tennghenhan", DbType="NVarChar(255)")]
		public string Tennghenhan
		{
			get
			{
				return this._Tennghenhan;
			}
			set
			{
				if ((this._Tennghenhan != value))
				{
					this.OnTennghenhanChanging(value);
					this.SendPropertyChanging();
					this._Tennghenhan = value;
					this.SendPropertyChanged("Tennghenhan");
					this.OnTennghenhanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnhNN", DbType="NVarChar(255)")]
		public string AnhNN
		{
			get
			{
				return this._AnhNN;
			}
			set
			{
				if ((this._AnhNN != value))
				{
					this.OnAnhNNChanging(value);
					this.SendPropertyChanging();
					this._AnhNN = value;
					this.SendPropertyChanged("AnhNN");
					this.OnAnhNNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thongtin", DbType="NVarChar(255)")]
		public string Thongtin
		{
			get
			{
				return this._Thongtin;
			}
			set
			{
				if ((this._Thongtin != value))
				{
					this.OnThongtinChanging(value);
					this.SendPropertyChanging();
					this._Thongtin = value;
					this.SendPropertyChanged("Thongtin");
					this.OnThongtinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(255)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					if (this._Admin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_Nghenhan", Storage="_Admin", ThisKey="Username", OtherKey="Username", IsForeignKey=true)]
		public Admin Admin
		{
			get
			{
				return this._Admin.Entity;
			}
			set
			{
				Admin previousValue = this._Admin.Entity;
				if (((previousValue != value) 
							|| (this._Admin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Admin.Entity = null;
						previousValue.Nghenhans.Remove(this);
					}
					this._Admin.Entity = value;
					if ((value != null))
					{
						value.Nghenhans.Add(this);
						this._Username = value.Username;
					}
					else
					{
						this._Username = default(string);
					}
					this.SendPropertyChanged("Admin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sanpham")]
	public partial class Sanpham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaSP;
		
		private string _TenSP;
		
		private string _Maloaisp;
		
		private string _Math;
		
		private System.Nullable<int> _Giaban;
		
		private string _Mota;
		
		private string _Trongluong;
		
		private string _Cachpha;
		
		private string _Ngaytao;
		
		private string _Username;
		
		private string _AnhSP;
		
		private EntitySet<Chitiethdb> _Chitiethdbs;
		
		private EntityRef<Loaisp> _Loaisp;
		
		private EntityRef<Admin> _Admin;
		
		private EntityRef<Thuonghieu> _Thuonghieu;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaSPChanging(string value);
    partial void OnMaSPChanged();
    partial void OnTenSPChanging(string value);
    partial void OnTenSPChanged();
    partial void OnMaloaispChanging(string value);
    partial void OnMaloaispChanged();
    partial void OnMathChanging(string value);
    partial void OnMathChanged();
    partial void OnGiabanChanging(System.Nullable<int> value);
    partial void OnGiabanChanged();
    partial void OnMotaChanging(string value);
    partial void OnMotaChanged();
    partial void OnTrongluongChanging(string value);
    partial void OnTrongluongChanged();
    partial void OnCachphaChanging(string value);
    partial void OnCachphaChanged();
    partial void OnNgaytaoChanging(string value);
    partial void OnNgaytaoChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnAnhSPChanging(string value);
    partial void OnAnhSPChanged();
    #endregion
		
		public Sanpham()
		{
			this._Chitiethdbs = new EntitySet<Chitiethdb>(new Action<Chitiethdb>(this.attach_Chitiethdbs), new Action<Chitiethdb>(this.detach_Chitiethdbs));
			this._Loaisp = default(EntityRef<Loaisp>);
			this._Admin = default(EntityRef<Admin>);
			this._Thuonghieu = default(EntityRef<Thuonghieu>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaSP", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaSP
		{
			get
			{
				return this._MaSP;
			}
			set
			{
				if ((this._MaSP != value))
				{
					this.OnMaSPChanging(value);
					this.SendPropertyChanging();
					this._MaSP = value;
					this.SendPropertyChanged("MaSP");
					this.OnMaSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSP", DbType="NVarChar(100)")]
		public string TenSP
		{
			get
			{
				return this._TenSP;
			}
			set
			{
				if ((this._TenSP != value))
				{
					this.OnTenSPChanging(value);
					this.SendPropertyChanging();
					this._TenSP = value;
					this.SendPropertyChanged("TenSP");
					this.OnTenSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Maloaisp", DbType="NVarChar(100)")]
		public string Maloaisp
		{
			get
			{
				return this._Maloaisp;
			}
			set
			{
				if ((this._Maloaisp != value))
				{
					if (this._Loaisp.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaloaispChanging(value);
					this.SendPropertyChanging();
					this._Maloaisp = value;
					this.SendPropertyChanged("Maloaisp");
					this.OnMaloaispChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Math", DbType="NVarChar(100)")]
		public string Math
		{
			get
			{
				return this._Math;
			}
			set
			{
				if ((this._Math != value))
				{
					if (this._Thuonghieu.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMathChanging(value);
					this.SendPropertyChanging();
					this._Math = value;
					this.SendPropertyChanged("Math");
					this.OnMathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Giaban", DbType="Int")]
		public System.Nullable<int> Giaban
		{
			get
			{
				return this._Giaban;
			}
			set
			{
				if ((this._Giaban != value))
				{
					this.OnGiabanChanging(value);
					this.SendPropertyChanging();
					this._Giaban = value;
					this.SendPropertyChanged("Giaban");
					this.OnGiabanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mota", DbType="NVarChar(255)")]
		public string Mota
		{
			get
			{
				return this._Mota;
			}
			set
			{
				if ((this._Mota != value))
				{
					this.OnMotaChanging(value);
					this.SendPropertyChanging();
					this._Mota = value;
					this.SendPropertyChanged("Mota");
					this.OnMotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Trongluong", DbType="NVarChar(255)")]
		public string Trongluong
		{
			get
			{
				return this._Trongluong;
			}
			set
			{
				if ((this._Trongluong != value))
				{
					this.OnTrongluongChanging(value);
					this.SendPropertyChanging();
					this._Trongluong = value;
					this.SendPropertyChanged("Trongluong");
					this.OnTrongluongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cachpha", DbType="NVarChar(255)")]
		public string Cachpha
		{
			get
			{
				return this._Cachpha;
			}
			set
			{
				if ((this._Cachpha != value))
				{
					this.OnCachphaChanging(value);
					this.SendPropertyChanging();
					this._Cachpha = value;
					this.SendPropertyChanged("Cachpha");
					this.OnCachphaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaytao", DbType="NVarChar(255)")]
		public string Ngaytao
		{
			get
			{
				return this._Ngaytao;
			}
			set
			{
				if ((this._Ngaytao != value))
				{
					this.OnNgaytaoChanging(value);
					this.SendPropertyChanging();
					this._Ngaytao = value;
					this.SendPropertyChanged("Ngaytao");
					this.OnNgaytaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(255)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					if (this._Admin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnhSP", DbType="NVarChar(255)")]
		public string AnhSP
		{
			get
			{
				return this._AnhSP;
			}
			set
			{
				if ((this._AnhSP != value))
				{
					this.OnAnhSPChanging(value);
					this.SendPropertyChanging();
					this._AnhSP = value;
					this.SendPropertyChanged("AnhSP");
					this.OnAnhSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sanpham_Chitiethdb", Storage="_Chitiethdbs", ThisKey="MaSP", OtherKey="MaSP")]
		public EntitySet<Chitiethdb> Chitiethdbs
		{
			get
			{
				return this._Chitiethdbs;
			}
			set
			{
				this._Chitiethdbs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loaisp_Sanpham", Storage="_Loaisp", ThisKey="Maloaisp", OtherKey="Maloaisp", IsForeignKey=true)]
		public Loaisp Loaisp
		{
			get
			{
				return this._Loaisp.Entity;
			}
			set
			{
				Loaisp previousValue = this._Loaisp.Entity;
				if (((previousValue != value) 
							|| (this._Loaisp.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Loaisp.Entity = null;
						previousValue.Sanphams.Remove(this);
					}
					this._Loaisp.Entity = value;
					if ((value != null))
					{
						value.Sanphams.Add(this);
						this._Maloaisp = value.Maloaisp;
					}
					else
					{
						this._Maloaisp = default(string);
					}
					this.SendPropertyChanged("Loaisp");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_Sanpham", Storage="_Admin", ThisKey="Username", OtherKey="Username", IsForeignKey=true)]
		public Admin Admin
		{
			get
			{
				return this._Admin.Entity;
			}
			set
			{
				Admin previousValue = this._Admin.Entity;
				if (((previousValue != value) 
							|| (this._Admin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Admin.Entity = null;
						previousValue.Sanphams.Remove(this);
					}
					this._Admin.Entity = value;
					if ((value != null))
					{
						value.Sanphams.Add(this);
						this._Username = value.Username;
					}
					else
					{
						this._Username = default(string);
					}
					this.SendPropertyChanged("Admin");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Thuonghieu_Sanpham", Storage="_Thuonghieu", ThisKey="Math", OtherKey="Math", IsForeignKey=true)]
		public Thuonghieu Thuonghieu
		{
			get
			{
				return this._Thuonghieu.Entity;
			}
			set
			{
				Thuonghieu previousValue = this._Thuonghieu.Entity;
				if (((previousValue != value) 
							|| (this._Thuonghieu.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Thuonghieu.Entity = null;
						previousValue.Sanphams.Remove(this);
					}
					this._Thuonghieu.Entity = value;
					if ((value != null))
					{
						value.Sanphams.Add(this);
						this._Math = value.Math;
					}
					else
					{
						this._Math = default(string);
					}
					this.SendPropertyChanged("Thuonghieu");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Chitiethdbs(Chitiethdb entity)
		{
			this.SendPropertyChanging();
			entity.Sanpham = this;
		}
		
		private void detach_Chitiethdbs(Chitiethdb entity)
		{
			this.SendPropertyChanging();
			entity.Sanpham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Thuonghieu")]
	public partial class Thuonghieu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Math;
		
		private string _Tenth;
		
		private EntitySet<Sanpham> _Sanphams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMathChanging(string value);
    partial void OnMathChanged();
    partial void OnTenthChanging(string value);
    partial void OnTenthChanged();
    #endregion
		
		public Thuonghieu()
		{
			this._Sanphams = new EntitySet<Sanpham>(new Action<Sanpham>(this.attach_Sanphams), new Action<Sanpham>(this.detach_Sanphams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Math", DbType="NVarChar(100) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Math
		{
			get
			{
				return this._Math;
			}
			set
			{
				if ((this._Math != value))
				{
					this.OnMathChanging(value);
					this.SendPropertyChanging();
					this._Math = value;
					this.SendPropertyChanged("Math");
					this.OnMathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tenth", DbType="NVarChar(255)")]
		public string Tenth
		{
			get
			{
				return this._Tenth;
			}
			set
			{
				if ((this._Tenth != value))
				{
					this.OnTenthChanging(value);
					this.SendPropertyChanging();
					this._Tenth = value;
					this.SendPropertyChanged("Tenth");
					this.OnTenthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Thuonghieu_Sanpham", Storage="_Sanphams", ThisKey="Math", OtherKey="Math")]
		public EntitySet<Sanpham> Sanphams
		{
			get
			{
				return this._Sanphams;
			}
			set
			{
				this._Sanphams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sanphams(Sanpham entity)
		{
			this.SendPropertyChanging();
			entity.Thuonghieu = this;
		}
		
		private void detach_Sanphams(Sanpham entity)
		{
			this.SendPropertyChanging();
			entity.Thuonghieu = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Tintuc")]
	public partial class Tintuc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MaTT;
		
		private string _Tieude;
		
		private string _Gioithieu;
		
		private string _Ngaytaott;
		
		private string _Username;
		
		private string _AnhTT;
		
		private EntityRef<Admin> _Admin;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTTChanging(string value);
    partial void OnMaTTChanged();
    partial void OnTieudeChanging(string value);
    partial void OnTieudeChanged();
    partial void OnGioithieuChanging(string value);
    partial void OnGioithieuChanged();
    partial void OnNgaytaottChanging(string value);
    partial void OnNgaytaottChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnAnhTTChanging(string value);
    partial void OnAnhTTChanged();
    #endregion
		
		public Tintuc()
		{
			this._Admin = default(EntityRef<Admin>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTT", DbType="NVarChar(255) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MaTT
		{
			get
			{
				return this._MaTT;
			}
			set
			{
				if ((this._MaTT != value))
				{
					this.OnMaTTChanging(value);
					this.SendPropertyChanging();
					this._MaTT = value;
					this.SendPropertyChanged("MaTT");
					this.OnMaTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tieude", DbType="NVarChar(255)")]
		public string Tieude
		{
			get
			{
				return this._Tieude;
			}
			set
			{
				if ((this._Tieude != value))
				{
					this.OnTieudeChanging(value);
					this.SendPropertyChanging();
					this._Tieude = value;
					this.SendPropertyChanged("Tieude");
					this.OnTieudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gioithieu", DbType="NVarChar(255)")]
		public string Gioithieu
		{
			get
			{
				return this._Gioithieu;
			}
			set
			{
				if ((this._Gioithieu != value))
				{
					this.OnGioithieuChanging(value);
					this.SendPropertyChanging();
					this._Gioithieu = value;
					this.SendPropertyChanged("Gioithieu");
					this.OnGioithieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngaytaott", DbType="NVarChar(255)")]
		public string Ngaytaott
		{
			get
			{
				return this._Ngaytaott;
			}
			set
			{
				if ((this._Ngaytaott != value))
				{
					this.OnNgaytaottChanging(value);
					this.SendPropertyChanging();
					this._Ngaytaott = value;
					this.SendPropertyChanged("Ngaytaott");
					this.OnNgaytaottChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(255)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					if (this._Admin.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AnhTT", DbType="NVarChar(255)")]
		public string AnhTT
		{
			get
			{
				return this._AnhTT;
			}
			set
			{
				if ((this._AnhTT != value))
				{
					this.OnAnhTTChanging(value);
					this.SendPropertyChanging();
					this._AnhTT = value;
					this.SendPropertyChanged("AnhTT");
					this.OnAnhTTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Admin_Tintuc", Storage="_Admin", ThisKey="Username", OtherKey="Username", IsForeignKey=true)]
		public Admin Admin
		{
			get
			{
				return this._Admin.Entity;
			}
			set
			{
				Admin previousValue = this._Admin.Entity;
				if (((previousValue != value) 
							|| (this._Admin.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Admin.Entity = null;
						previousValue.Tintucs.Remove(this);
					}
					this._Admin.Entity = value;
					if ((value != null))
					{
						value.Tintucs.Add(this);
						this._Username = value.Username;
					}
					else
					{
						this._Username = default(string);
					}
					this.SendPropertyChanged("Admin");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
